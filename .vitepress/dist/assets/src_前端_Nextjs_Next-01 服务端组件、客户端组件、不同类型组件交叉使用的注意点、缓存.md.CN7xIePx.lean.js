import{_ as e,C as t,c as k,o as r,ag as n,j as s,a,G as l,w as d}from"./chunks/framework.Dpoz9nJ7.js";const A=JSON.parse('{"title":"服务端组件、客户端组件、不同类型组件交叉使用的注意点、缓存","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/Nextjs/Next-01 服务端组件、客户端组件、不同类型组件交叉使用的注意点、缓存.md","filePath":"src/前端/Nextjs/Next-01 服务端组件、客户端组件、不同类型组件交叉使用的注意点、缓存.md","lastUpdated":1752723027000}'),E={name:"src/前端/Nextjs/Next-01 服务端组件、客户端组件、不同类型组件交叉使用的注意点、缓存.md"},g={tabindex:"0"};function o(c,i,y,F,u,C){const p=t("Carousel"),h=t("font");return r(),k("div",null,[i[13]||(i[13]=n("",25)),s("p",null,[i[0]||(i[0]=a("现在，可以使用",-1)),l(p),i[1]||(i[1]=a("直接在服务器组件中",-1))]),i[14]||(i[14]=n("",38)),s("table",g,[i[12]||(i[12]=s("thead",null,[s("tr",null,[s("th",null,"方法"),s("th",null,"解释"),s("th",null,"用途"),s("th",null,"期间"),s("th",null,"清除方式")])],-1)),s("tbody",null,[i[9]||(i[9]=s("tr",null,[s("td",null,[s("a",{href:"https://nextjs.org/docs/app/building-your-application/caching#client-side-router-cache",target:"_blank",rel:"noreferrer"},"Router Cache"),a("路由器缓存")]),s("td",null,"缓存在客户端，通过link导航的方式才会被缓存"),s("td",null,"减少服务器上的导航请求"),s("td",null,"用户会话或基于时间的会话"),s("td",null,"页面刷新的时候会清除缓存")],-1)),s("tr",null,[i[5]||(i[5]=s("td",null,"全路由缓存",-1)),s("td",null,[i[3]||(i[3]=a("HTML和服务端组件有效载荷（",-1)),l(h,{color:"red"},{default:d(()=>[...i[2]||(i[2]=[s("strong",null,"静态渲染的路由",-1)])]),_:1}),i[4]||(i[4]=a("）",-1))]),i[6]||(i[6]=s("td",null,"降低渲染成本并提高性能",-1)),i[7]||(i[7]=s("td",null,"持续（可以重新验证）",-1)),i[8]||(i[8]=s("td",null,"变为动态渲染组件",-1))]),i[10]||(i[10]=s("tr",null,[s("td",null,"请求记忆"),s("td",null,"函数的返回值，是一个React功能"),s("td",null,"在React组件树中重复使用数据"),s("td",null,"每次重新生命周期"),s("td",null,"const { signal } = new AbortController() fetch(url, { signal })")],-1)),i[11]||(i[11]=s("tr",null,[s("td",null,"数据缓存"),s("td",null,"Data"),s("td",null,"跨用户请求和部署存储数据"),s("td",null,"持续（可以重新验证）"),s("td",null,"服务端")],-1))])]),i[15]||(i[15]=n("",18))])}const v=e(E,[["render",o]]);export{A as __pageData,v as default};
