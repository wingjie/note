import{_ as s,c as t,o as l,a4 as a,m as i}from"./chunks/framework.C8gWICj3.js";const y=JSON.parse('{"title":"html-01 基础知识","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/html5/html-01 基础知识.md","filePath":"src/前端/html5/html-01 基础知识.md","lastUpdated":1710314684000}'),p={name:"src/前端/html5/html-01 基础知识.md"},e=a(`<h1 id="html-01-基础知识" tabindex="-1">html-01 基础知识 <a class="header-anchor" href="#html-01-基础知识" aria-label="Permalink to &quot;html-01 基础知识&quot;">​</a></h1><h2 id="一、注释方法" tabindex="-1">一、注释方法 <a class="header-anchor" href="#一、注释方法" aria-label="Permalink to &quot;一、注释方法&quot;">​</a></h2><p>html 表示超文本标记语言，结构 用来注释</p><p>css 表示层叠样式表，样式 用&lt;/* */&gt;注释</p><p>js 表示脚本语言，行为动作 单行用//注释，多行用&lt;/* */&gt;</p><h2 id="二、介绍" tabindex="-1">二、介绍 <a class="header-anchor" href="#二、介绍" aria-label="Permalink to &quot;二、介绍&quot;">​</a></h2><p>html语言，用标记标签来描述网页的。</p><p>标签成对出现的，单标签的叫空标签或自闭合标签。</p><p>自闭合标签：<code>&lt;br&gt;</code>、<code>&lt;hr&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;meta&gt;</code>、<code>&lt;link&gt;</code></p><h2 id="三、常用浏览器及内核" tabindex="-1">三、常用浏览器及内核 <a class="header-anchor" href="#三、常用浏览器及内核" aria-label="Permalink to &quot;三、常用浏览器及内核&quot;">​</a></h2><p>谷歌 ---webkit blink</p><p>火狐 ---gecko</p><p>safari ---webkit</p><p>opera ---开始webkit 后来blink</p><p>ie ---trident</p><h2 id="五、标签" tabindex="-1">五、标签 <a class="header-anchor" href="#五、标签" aria-label="Permalink to &quot;五、标签&quot;">​</a></h2><p>h1-h6 六级标签，数字越大文字越小。p代表段落</p><p>h1每个页面最好只用一次，h2-h6可以随便用。</p><p>br 强制换行，是自闭合标签(空标签)。</p><h2 id="六、页面的基本结构" tabindex="-1">六、页面的基本结构 <a class="header-anchor" href="#六、页面的基本结构" aria-label="Permalink to &quot;六、页面的基本结构&quot;">​</a></h2><ol><li><code>&lt;!DOCTYPE html&gt;</code> 声明文档，告诉浏览器的解析器用哪种规范来解析文档</li></ol><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; // 文档使用的编码格式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Document&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="2"><li>meta标签里面包含了页面的元信息（关键字，描述），页面的编码格式（字符编码，字符集），</li><li>常用的编码格式有:gb2312(国际2312),gbk(国标扩),UTF-8。</li><li>body标签里面是页面的主体</li></ol><h2 id="七、标签分类" tabindex="-1">七、标签分类 <a class="header-anchor" href="#七、标签分类" aria-label="Permalink to &quot;七、标签分类&quot;">​</a></h2><ol><li><p>块标签</p><p>单独占用一行，可以设置所有的样式</p><p>常用的块标签有：h1-h6,p,div,ul,li,ol,dl,dt,dd</p><p>块标签里面可以包含其他的块标签，内联标签，内联块都行</p><p>但是p标签里面不能包含块标签</p></li><li><p>内联标签(行内标签) 在同一行显示，显示不完换行，不可以设置所有样式(比如宽度高度);</p><p>常用的内联标签有：strong,b,em,i,span,a</p><p>内联标签的margin值和padding值只能只能设置左右，不能设置上下。</p><p>内联标签里面不可以包含块标签，但是a标签可以放。</p><p>内联元素出现空格如何解决：</p></li><li><p>删除回车。（不提倡，不直观）。</p></li><li><p>给父元素设置font-size:0；给子元素设置font-size恢复子元素的字体。</p></li><li><p>内联块标签(行内块标签) 在同一行显示，显示不完换行，可以设置所有属性，可以设置宽高。</p></li></ol><p>常用的内联块标签有：img</p><p>给img标签的父元素设置font-size:0;可以解决图片间隙</p><h2 id="八、css" tabindex="-1">八、CSS <a class="header-anchor" href="#八、css" aria-label="Permalink to &quot;八、CSS&quot;">​</a></h2>`,28),h=i("ol",null,[i("li",null,"在head标签里面写style标签"),i("li",{"属性名:属性值":"",";":""},"语法：选择器")],-1),n=a(`<div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="3"><li>属性名和属性值中间用冒号隔开。</li></ol><h2 id="九、div和span标签" tabindex="-1">九、div和span标签 <a class="header-anchor" href="#九、div和span标签" aria-label="Permalink to &quot;九、div和span标签&quot;">​</a></h2><ol><li>div标签 ：没有任何语义,可以把他看做一个盒子,一个块,或者一部分,块标签。</li><li>span标签：没有任何语义,内联标签。</li></ol><h2 id="十、无序列表。" tabindex="-1">十、无序列表。 <a class="header-anchor" href="#十、无序列表。" aria-label="Permalink to &quot;十、无序列表。&quot;">​</a></h2><ol><li>ul标签和li标签配合使用，ul标签只能放li标签，li标签可以放其他标签。</li><li>每个li前面都有个默认的实心圆，想改变默认的小圆点可以在li标签里面设置 type=&quot;circle&quot; 空心圆（了解）</li></ol><p>type=&quot;square&quot; 方块</p><p>想取消默认的点:需要设置CSS属性：list-style:none;</p><p>ul和li都是块标签。</p><h2 id="十一、有序列表" tabindex="-1">十一、有序列表 <a class="header-anchor" href="#十一、有序列表" aria-label="Permalink to &quot;十一、有序列表&quot;">​</a></h2><p>ol标签和li标签配合使用，每个li前面都有默认的序号，改变需要在ol标签设置</p><p>type=&quot;a&quot; //小写a顺序排序</p><p>type=&quot;A&quot; //大写A顺序排序</p><p>type=&quot;I&quot; //罗马数字顺序排列</p><p>type=&quot;i&quot; //罗马数字顺序小写排列</p><p>取消默认设置CSS属性：list-style:none;</p><p>倒序显示：reversed，从3开始倒序，start=&quot;3&quot;；</p><p>ol和li都是块标签</p><p>li的父元素必须是ul或ol。</p><h2 id="十二、定义列表" tabindex="-1">十二、定义列表 <a class="header-anchor" href="#十二、定义列表" aria-label="Permalink to &quot;十二、定义列表&quot;">​</a></h2><p>dl,dt,dd配合使用，dl是dt和dd的父元素，dt,dd是兄弟元素</p><p>dl的直接子元素只能是dt,dd，dt和dd里面可以包含其他元素</p><p>dd是对dt的解释和说明</p><p>dl,dt,dd都是块元素</p><h2 id="十三、文字加粗-偏斜" tabindex="-1">十三、文字加粗，偏斜 <a class="header-anchor" href="#十三、文字加粗-偏斜" aria-label="Permalink to &quot;十三、文字加粗，偏斜&quot;">​</a></h2><ol><li>strong,b都可以让文字加粗，其中strong标签更具有强调的意义。</li><li>em,i都可以让文字倾斜，其中em更具有强调的意义。</li></ol><h2 id="十四、图片标签" tabindex="-1">十四、图片标签 <a class="header-anchor" href="#十四、图片标签" aria-label="Permalink to &quot;十四、图片标签&quot;">​</a></h2><p>1.img标签，自闭合标签(空标签)； src=&quot;图片路劲&quot;；</p><p>alt=&quot;图片的描述文字&quot;； 当图片加载不出来的时候会显示这段文字。</p><p>title=&quot;图片的标题&quot;；鼠标放上去显示这段文字。（所有的标签都可以有title属性）</p><p>srcset=&#39;图片地址 2x&#39; 2x和3x根据密度区分图片，800w根据宽度适应图片；也可以写dpi，css可以写背景图时用image-set属性名；</p><p>width=&quot;500&quot;,height=&quot;500&quot;；</p><h2 id="十五、路径" tabindex="-1">十五、路径 <a class="header-anchor" href="#十五、路径" aria-label="Permalink to &quot;十五、路径&quot;">​</a></h2><ol><li><p>绝对路径；（完整路径） （1）从盘符开始的</p><p>（2）从具体链接http开始的</p></li><li><p>相对路径；（文件夹下的路径） （1）在同一个目录下直接写文件名字(包含扩展名)，或者写./文件名字；</p></li></ol><p>（2）当被链接的文件在当前文件的下一级文件夹里，写文件夹的名字/被链接的文件名字。</p><p>（3）当被链接的文件在当前文件的上一级，用../上一级链接的文件</p><h2 id="十六、语义化" tabindex="-1">十六、语义化 <a class="header-anchor" href="#十六、语义化" aria-label="Permalink to &quot;十六、语义化&quot;">​</a></h2><p>语义化是什么：用合理的html标签和特有的属性来格式化文档的内容。</p><p><strong>语义化的有什么好处：</strong></p><ol><li>在没有css的情况下，页面还能呈现很好的页面结构。</li><li>提高代码的可读性，便于后期维护。</li><li>提高用户的体验，比如：给img标签设置title alt。</li><li>对seo有帮助。（seo是搜索引擎优化）。</li></ol><h2 id="面试题" tabindex="-1">面试题 <a class="header-anchor" href="#面试题" aria-label="Permalink to &quot;面试题&quot;">​</a></h2><p>● 简述&lt;!doctype&gt;的作用？</p><p>● 常见的浏览器及其内核？</p><p>● 常见的块级标签和行内标签分别有哪些？</p><p>● b和strong（i和em）标签的区别？</p><p>● 谈谈对语义化的理解？</p>`,46),o=[e,h,n];function d(r,k,E,c,g,u){return l(),t("div",null,o)}const q=s(p,[["render",d]]);export{y as __pageData,q as default};
