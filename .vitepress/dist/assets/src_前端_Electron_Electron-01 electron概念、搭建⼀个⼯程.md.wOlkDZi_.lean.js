import{_ as t,C as h,c as p,o as k,ag as a,j as n,a as i,G as e,w as E}from"./chunks/framework.Dpoz9nJ7.js";const r="/assets/makeUp.CRmfrZ1V.png",d="/assets/%E8%BF%9B%E7%A8%8B%E6%A8%A1%E5%9E%8B.mldy4feg.png",o="/assets/%E2%BD%82%E4%BB%B6%E7%BB%93%E6%9E%84.C1m6AzLT.png",A=JSON.parse('{"title":"Electron-01  electron概念、搭建⼀个⼯程","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/Electron/Electron-01 electron概念、搭建⼀个⼯程.md","filePath":"src/前端/Electron/Electron-01 electron概念、搭建⼀个⼯程.md","lastUpdated":1737701110000}'),g={name:"src/前端/Electron/Electron-01 electron概念、搭建⼀个⼯程.md"};function y(c,s,F,u,C,q){const l=h("font");return k(),p("div",null,[s[4]||(s[4]=a("",50)),n("p",null,[s[1]||(s[1]=n("strong",null,"媒介脚本",-1)),s[2]||(s[2]=i("(preload.js):预加载（Preload）脚本是运⾏在渲染进程中的， 但它是在",-1)),e(l,{color:"red"},{default:E(()=>[...s[0]||(s[0]=[i("⽹⻚内容加载之前执⾏的",-1)])]),_:1}),s[3]||(s[3]=i("，这意味着它具有⽐普通渲染器代码更⾼的权限，可以访问 Node.js 的 API，同时⼜可以与⽹⻚内容进⾏安全 的交互。 简单说：它是 Node.js 和 Web API 的桥梁，Preload 脚本可以安全地将部分 Node.js 功能暴露给⽹⻚，从⽽减少安全⻛险。",-1))]),s[5]||(s[5]=a("",2))])}const D=t(g,[["render",y]]);export{A as __pageData,D as default};
