import{_ as s,c as n,o as a,d as t}from"./app.8aafc8a7.js";const g='{"title":"\u7C7B\u578B\u6536\u96C6","description":"","frontmatter":{},"headers":[{"level":2,"title":"React.forwordRef\u7C7B\u578B","slug":"react-forwordref\u7C7B\u578B"},{"level":2,"title":"\u5B89\u5168\u7684Omit","slug":"\u5B89\u5168\u7684omit"}],"relativePath":"src/frontend/Typescript/ts-\u7C7B\u578B\u6536\u96C6.md","lastUpdated":1663038641000}',p={},o=t(`<h1 id="\u7C7B\u578B\u6536\u96C6" tabindex="-1">\u7C7B\u578B\u6536\u96C6 <a class="header-anchor" href="#\u7C7B\u578B\u6536\u96C6" aria-hidden="true">#</a></h1><h2 id="react-forwordref\u7C7B\u578B" tabindex="-1">React.forwordRef\u7C7B\u578B <a class="header-anchor" href="#react-forwordref\u7C7B\u578B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">RsRefForwardingComponent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> React<span class="token punctuation">.</span>ElementType<span class="token punctuation">,</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token operator">&lt;</span>As <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>ElementType <span class="token operator">=</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
    props<span class="token operator">:</span> React<span class="token punctuation">.</span>PropsWithChildren<span class="token operator">&lt;</span>ReplaceProps<span class="token operator">&lt;</span>As<span class="token punctuation">,</span> WithAsProps<span class="token operator">&lt;</span>As<span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token constant">P</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    context<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> React<span class="token punctuation">.</span>ReactElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  propTypes<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  contextTypes<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  displayName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>Use</strong></p><div class="language-ts"><pre><code><span class="token keyword">const</span> Button<span class="token operator">:</span> RsRefForwardingComponent<span class="token operator">&lt;</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span> ButtonProps<span class="token operator">&gt;</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">forwardRef</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> ref<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u5B89\u5168\u7684omit" tabindex="-1">\u5B89\u5168\u7684Omit <a class="header-anchor" href="#\u5B89\u5168\u7684omit" aria-hidden="true">#</a></h2><p>\u89E3\u51B3\u6389omit\u6CA1\u6709\u5176\u4ED6\u5C5E\u6027\u7684\u95EE\u9898</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">Convert<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span>
    <span class="token operator">?</span> <span class="token builtin">never</span>
    <span class="token operator">:</span> <span class="token builtin">number</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span>
    <span class="token operator">?</span> <span class="token builtin">never</span>
    <span class="token operator">:</span> <span class="token builtin">symbol</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span>
    <span class="token operator">?</span> <span class="token builtin">never</span>
    <span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * @description \u6D88\u9664 [x:string]:any
 */</span>
<span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">Keys<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Convert<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>_ <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  <span class="token operator">?</span> <span class="token constant">U</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">SafeOmit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>Keys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span>
  <span class="token operator">?</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span>Keys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span>
  <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,8),e=[o];function c(l,r,k,i,u,d){return a(),n("div",null,e)}var m=s(p,[["render",c]]);export{g as __pageData,m as default};
