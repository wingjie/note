import{_ as l,c as h,o as n,a4 as a,m as s,a as i}from"./chunks/framework.C8gWICj3.js";const E=JSON.parse('{"title":"linux-06 shell基础","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/Server/linux-06 shell基础.md","filePath":"src/前端/Server/linux-06 shell基础.md","lastUpdated":1710326451000}'),t={name:"src/前端/Server/linux-06 shell基础.md"},e=a('<h1 id="linux-06-shell基础" tabindex="-1">linux-06 shell基础 <a class="header-anchor" href="#linux-06-shell基础" aria-label="Permalink to &quot;linux-06 shell基础&quot;">​</a></h1><h2 id="一、shell基础" tabindex="-1">一、shell基础 <a class="header-anchor" href="#一、shell基础" aria-label="Permalink to &quot;一、shell基础&quot;">​</a></h2><p><code>echo -e</code> 支持反斜线控制的字符转换</p><h3 id="控制字符" tabindex="-1">控制字符 <a class="header-anchor" href="#控制字符" aria-label="Permalink to &quot;控制字符&quot;">​</a></h3><ul><li><code>\\\\</code> 输出\\本身</li><li><code>\\b</code> 退格键</li><li><code>\\e</code> ESCAPE键</li><li><code>\\f</code>换页符</li><li><code>\\n</code>换行符</li><li><code>\\r</code> 回车符</li><li><code>\\t</code> 制表符(tab键)</li><li><code>\\0nnn</code> (nnn三位八进制)</li><li><code>\\xhh</code> 按照十六进制</li></ul><h3 id="输出颜色" tabindex="-1">输出颜色 <a class="header-anchor" href="#输出颜色" aria-label="Permalink to &quot;输出颜色&quot;">​</a></h3><p><code>echo -e &quot;\\e[1;31m abcd \\e[0m&quot;</code></p><p>30m黑色、31m红色、32m绿色、33m黄色、34m蓝色、35m洋色 、36m青色、37m白色</p><h3 id="输入内容到文件" tabindex="-1">输入内容到文件 <a class="header-anchor" href="#输入内容到文件" aria-label="Permalink to &quot;输入内容到文件&quot;">​</a></h3><ul><li>覆盖：<code>echo &#39;content&#39; &gt; a.txt</code></li><li>追加：<code>echo &#39;string&#39; &gt;&gt; a.txt</code></li></ul><h3 id="执行shell脚本" tabindex="-1">执行shell脚本 <a class="header-anchor" href="#执行shell脚本" aria-label="Permalink to &quot;执行shell脚本&quot;">​</a></h3><ul><li><code>chmod 755 hello.sh</code></li><li><code>./hello.sh</code></li><li><code>bash hello.sh</code></li></ul><h3 id="输出重定向" tabindex="-1">输出重定向 <a class="header-anchor" href="#输出重定向" aria-label="Permalink to &quot;输出重定向&quot;">​</a></h3><ul><li><code>命令 &gt; 文件 2&gt;&amp;1</code> 以覆盖方式 把正确和错误输入到一个文件</li><li><code>命令 &gt;&gt; 文件 2&gt;&amp;</code> 以追加方式 把正确和错误输入到一个文件</li><li><code>命令 &amp;&gt; 文件</code> 以覆盖方式 把正确和错误输入到一个文件</li><li><code>命令 &amp;&gt;&gt; 文件</code> 以追加方式 把正确和错误输入到一个文件</li><li><code>命令&gt;&gt;文件1 2&gt;&gt;文件2</code> 把正确追加到1 错误追加到2</li></ul><h3 id="输入重定向" tabindex="-1">输入重定向 <a class="header-anchor" href="#输入重定向" aria-label="Permalink to &quot;输入重定向&quot;">​</a></h3><p><code>wc 选项 文件名</code> <code>-c</code>统计字节 <code>-w</code>统计单词 <code>-l</code>统计行数</p><h3 id="多命令顺序" tabindex="-1">多命令顺序 <a class="header-anchor" href="#多命令顺序" aria-label="Permalink to &quot;多命令顺序&quot;">​</a></h3><p>命令 ; 命令 ; 命令 多命令执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if=输入文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of=输出文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bs=字节数</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> count=个数</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 计算复制速度</span></span></code></pre></div><ul><li><code>&amp;&amp;</code>：逻辑与，第一条执行再执行第二条</li><li><code>||</code>：逻辑或 ，第一条错误执行第二条 第一条正确不执行第二条</li><li>判断命令是否正确：命令 &amp;&amp; echo yes || echo no</li><li>命令1的正确输出作为命令2的操作对象：命令 | 命令2</li></ul><h3 id="通配符" tabindex="-1">通配符 <a class="header-anchor" href="#通配符" aria-label="Permalink to &quot;通配符&quot;">​</a></h3><ul><li><code>?</code>单个字符</li><li><code>*</code>包含任意字符</li><li><code>[a-z]a-z</code>的字符</li><li><code>[^a-z]</code>只有数字 没有字母</li><li><code>&#39;&#39;</code>没有特殊意义</li><li><code>&quot;&quot;</code>有特殊含义</li><li>``直接执行命令</li><li><code>$()</code>和反引号一样</li><li><code>#</code>注释</li><li><code>$</code>调用变量</li><li><code>\\</code>转意符</li></ul><h3 id="本地变量-只在当前变量生效" tabindex="-1">本地变量（只在当前变量生效） <a class="header-anchor" href="#本地变量-只在当前变量生效" aria-label="Permalink to &quot;本地变量（只在当前变量生效）&quot;">​</a></h3><p>本地变量定义：name=sc</p><ul><li>变量叠加 <ul><li><code>aa=&quot;$aa&quot;456</code></li><li><code>aa=${aa}789</code></li></ul></li><li><code>set</code> 变量查看</li><li><code>unset 变量</code> 变量删除</li><li><code>echo $name</code> 调用变量 变量前加$</li></ul><p>如果想获取一条命令的执行结果，需要使用反引号``</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull`</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $name</span></span></code></pre></div><h3 id="环境变量-在所有变量生效" tabindex="-1">环境变量（在所有变量生效） <a class="header-anchor" href="#环境变量-在所有变量生效" aria-label="Permalink to &quot;环境变量（在所有变量生效）&quot;">​</a></h3><ul><li><p><code>pstree</code> 查看当前变量等级</p></li><li><p><code>export age=18</code> 定义环境变量</p></li><li><p><code>env</code> 查看环境变量</p></li><li><p><code>echo $PATH</code> 查找系统命令路劲</p></li><li><p><code>PS1</code> 定义系统提示符的变量</p><p><code>PS1=&#39;[\\u@\\t \\W]\\$ &#39;</code> -t时间 -u用户 -h主机名 -W显示最后一个目录 $提示符</p></li></ul><h3 id="位置参数变量" tabindex="-1">位置参数变量 <a class="header-anchor" href="#位置参数变量" aria-label="Permalink to &quot;位置参数变量&quot;">​</a></h3>',30),p=s("ul",null,[s("li",{10:""},[s("code",null,"$n"),i(" $0代表命令本身 $1-$9代表第1-9个参数 十以上的表达$")]),s("li",null,[s("code",null,"$*"),i(" 所有参数 看成整个参数")]),s("li",null,[s("code",null,"$@"),i(" 所有参数 看成单个参数")]),s("li",null,[s("code",null,"$#"),i(" 代表多少个参数")])],-1),k=a(`<h3 id="预定义变量" tabindex="-1">预定义变量 <a class="header-anchor" href="#预定义变量" aria-label="Permalink to &quot;预定义变量&quot;">​</a></h3><ul><li><p><code>$?</code> 返回结果0正确执行 返回非0错误执行</p></li><li><p><code>$$</code> 当前进程的进程号pid</p></li><li><p><code>$!</code> 最后一个进程后台pid</p></li><li><p><code>&amp;</code> 放入后台</p></li></ul><h3 id="接收键盘输入" tabindex="-1">接收键盘输入 <a class="header-anchor" href="#接收键盘输入" aria-label="Permalink to &quot;接收键盘输入&quot;">​</a></h3><p>read 选项 变量名 -p &quot;提示信息&quot; 输入提示信息 -t 秒数 -n 字符数 -s 隐藏字符</p><h3 id="数值运算符" tabindex="-1">数值运算符 <a class="header-anchor" href="#数值运算符" aria-label="Permalink to &quot;数值运算符&quot;">​</a></h3><p>declare [+/-]选项 变量名</p><ul><li><code>-</code> 设定变量属性</li><li><code>+</code> 取消变量属性</li><li><code>-i</code> 声明变量整形</li><li><code>-x</code> 声明环境变量</li><li><code>-p</code> 查看变量类型</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cc=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$aa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$bb</span></span></code></pre></div><h3 id="expr或let数值运算工具" tabindex="-1">expr或let数值运算工具 <a class="header-anchor" href="#expr或let数值运算工具" aria-label="Permalink to &quot;expr或let数值运算工具&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $aa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$bb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hh=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$aa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$bb</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ff</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(( </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$aa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$bb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $aa+$bb </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(( </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 得余数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(( </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 逻辑与运算</span></span></code></pre></div><h2 id="二、字符截取命令" tabindex="-1">二、字符截取命令 <a class="header-anchor" href="#二、字符截取命令" aria-label="Permalink to &quot;二、字符截取命令&quot;">​</a></h2><p>student.txt内容如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PHP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MySQL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Average</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Liming</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 82</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 95</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 86</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 87.66</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 74</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 96</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 87</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 85.66</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Gao</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 99</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 83</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 93</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 91.66</span></span></code></pre></div><h3 id="cut字段提取命令" tabindex="-1">cut字段提取命令 <a class="header-anchor" href="#cut字段提取命令" aria-label="Permalink to &quot;cut字段提取命令&quot;">​</a></h3><p><code>cut [选项] 文件名</code></p><ul><li><code>-f 列号</code>：提取第几列</li><li><code>-d 分隔符</code>：按照指定分隔符分割列</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;:&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#cut命令的局限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,3</span></span></code></pre></div><h3 id="printf命令" tabindex="-1">printf命令 <a class="header-anchor" href="#printf命令" aria-label="Permalink to &quot;printf命令&quot;">​</a></h3><p><code>printf &#39;[输出类型输出格式]&#39; 输出内容</code></p><ul><li><code>%ns</code>：输出字符串，n指代输出几个字符</li><li><code>%ni</code>：输出整数n指代输出几个字符</li><li><code>%m.nf</code>：输出浮点数，m和n是数字，指代输出的整数和小数，%8.2f代表共输出8位数，2位小数，6位整数；</li></ul><p>输出格式：</p><ul><li><code>\\a</code>：输出警告声音</li><li><code>\\b</code>：输出退格键</li><li><code>\\f</code>：清除屏幕</li><li><code>\\n</code>：换行</li><li><code>\\r</code>：回车</li><li><code>\\t</code>：水平输出退格，tab键</li><li><code>\\v</code>：垂直输出退格，tab键</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%s %s %s \\n&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span></span></code></pre></div><p>在awt命令的输出中支持print和printf命令：</p><ul><li>print：print会在每个输出之后自动加入一个换行符（linux默认没有print命令）</li><li>printf：printf是标准格式输出命令，并不会自动加入换行符，如果需要换行需要手工加入换行符；</li></ul><h3 id="awk命令" tabindex="-1">awk命令 <a class="header-anchor" href="#awk命令" aria-label="Permalink to &quot;awk命令&quot;">​</a></h3><p><code>awk &#39;条件1{动作1} 条件2{动作2}...&#39; 文件名</code></p><p>条件：一般使用关系表达式作为条件</p><ul><li>x &gt; 10 ：判断变量x是否大于10</li><li>x &gt;= 10</li><li>x &lt;= 10</li></ul><p>动作：</p><ul><li>格式化输出</li><li>流程控制语句</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{printf $2 &quot;\\t&quot; $6 &quot;\\n&quot;}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $1 &quot;\\t&quot; $3}&#39;</span></span></code></pre></div><p>BEGIN</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;BEGIN{printf &quot;This is a transcript \\n&quot;} {printf $2 &quot;\\t&quot; $6 &quot;\\n&quot;}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span></code></pre></div><p>END</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;END{printf &quot;the end \\n&quot;}{printf $2 &quot;\\t&quot; $6 &quot;\\n&quot;}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span></code></pre></div><p>FS内置变量</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/bin/bash&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;BEGIN {FS=&quot;:&quot;} {printf $1 &quot;\\t&quot; $3 &quot;\\n&quot;}&#39;</span></span></code></pre></div><p>关系运算符</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;$6 &gt;= 87 {printf $2 &quot;\\n&quot;}&#39;</span></span></code></pre></div><h3 id="sed命令" tabindex="-1">sed命令 <a class="header-anchor" href="#sed命令" aria-label="Permalink to &quot;sed命令&quot;">​</a></h3><p>sed是一种几乎包括在所有UNIX平台（包括Linux）的轻量级流编辑器，sed主要是用来将数据进行选取、替换、删除、新增的命令</p><p><code>sed [选项] &#39;[动作]&#39; 文件名</code></p><ul><li><code>-n</code>：一般sed命令会把所有的数据都输出到屏幕，如果加入此选择，则只会把经过sed命令处理的行输出到屏幕</li><li><code>-e</code>：允许对输入数据应用多条sed命令编辑</li><li><code>-i</code>：用sed的修改结果直接修改读取数据的文件，而不是屏幕输出</li></ul><p>动作：</p><ul><li><code>a \\</code>： 追加，在当前行后添加一行或多行。添加多行时，除最后 一行 外，每行末尾需要用“\\”代表数据未完结。</li><li><code>c \\</code>： 行替换，用c后面的字符串替换原数据行，替换多行时，除最 后一行外，每行末尾需用“\\”代表数据未完结。</li><li><code>i \\</code>： 插入，在当期行前插入一行或多行。插入多行时，除最后 一行 外，每行末尾需要用“\\”代表数据未完结。</li><li><code>d</code>： 删除，删除指定的行。</li><li><code>p</code>： 打印，输出指定的行。</li><li><code>s</code>： 字串替换，用一个字符串替换另外一个字符串。格式为“行范 围s/旧字串/新字串/g”（和vim中的替换格式类似）</li></ul><p>学生成绩表</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PHP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MySQL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Average</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Liming</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 82</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 95</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 86</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 87.66</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 74</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 96</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 87</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 85.66</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Gao</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 99</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 83</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 93</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 91.66</span></span></code></pre></div><p>行数据操作</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看第2行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2p&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2p&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除第二行到第四行的数据，但不修改文件本身</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2,4d&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在第二行后追加hello</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2a hello&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在第二行前插入两行数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2i hello world&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据替换</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;2c Nosuch person&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sed操作的数据直接写入文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;3s/74/99/g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  student.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#同时把“ Liming ”和“ Gao ”替换为空</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/Liming//g ; s/Gao//g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> student.txt</span></span></code></pre></div><h2 id="三、字符处理命令" tabindex="-1">三、字符处理命令 <a class="header-anchor" href="#三、字符处理命令" aria-label="Permalink to &quot;三、字符处理命令&quot;">​</a></h2><h3 id="排序命令sort" tabindex="-1">排序命令sort <a class="header-anchor" href="#排序命令sort" aria-label="Permalink to &quot;排序命令sort&quot;">​</a></h3><p><code>sort [选项] 文件名</code></p><ul><li><code>-f</code>： 忽略大小写</li><li><code>-n</code>： 以数值型进行排序，默认使用字符串型排序</li><li><code>-r</code>： 反向排序</li><li><code>-t</code>： 指定分隔符，默认是分隔符是制表符</li><li><code>-k n[,m]</code>： 按照指定的字段范围排序。从第n字段开始， m字段结束（默认到行尾</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定分隔符是“：”，用第三字段开头，第三字段结尾排序，就是只用第三字段排序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;:&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd</span></span></code></pre></div><h3 id="统计命令wc" tabindex="-1">统计命令wc <a class="header-anchor" href="#统计命令wc" aria-label="Permalink to &quot;统计命令wc&quot;">​</a></h3><p><code>wc [选项] 文件名</code></p><ul><li><code>-l</code>： 只统计行数</li><li><code>-w</code>： 只统计单词数</li><li><code>-m</code>： 只统计字符数</li></ul><h3 id="判断字符串是否包含" tabindex="-1">判断字符串是否包含 <a class="header-anchor" href="#判断字符串是否包含" aria-label="Permalink to &quot;判断字符串是否包含&quot;">​</a></h3><ol><li><p>利用字符串运算符</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;helloworld&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ $strA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $strB ]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;包含&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;不包含&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div></li><li><p>利用通配符</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;helloworld&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;low&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ $A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;包含&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;不包含&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div></li></ol>`,60),d=[e,p,k];function o(r,c,F,g,y,C){return n(),h("div",null,d)}const B=l(t,[["render",o]]);export{E as __pageData,B as default};
